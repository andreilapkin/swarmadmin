swarm:
  serviceAccount:
    create: true
    name: locustswarm-swarm
    annotations: {}
  strategy:
    type: RollingUpdate
  #image: ghcr.io/mms-gianni/locustswarm/swarmadmin
  image: gicara/swarmadmin
  tag: v0.1.0
  namespace: "locustswarm"
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 1000m
    #   memory: 1024Mi
  annotations: {}
    # Something: here
  # swarm.kubeconfig -- base64 encoded kubeconfig file for a external kubernetes cluster
  kubeconfig: false

master:  
  serviceAccount:
    create: true
    name: locustswarm-master
    annotations: {}
  pdb:
    enabled: false
worker:  
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 40
  serviceAccount:
    create: true
    name: locustswarm-worker
    annotations: {}


image:
  repository: locustio/locust
  tag: 2.4.0
  pullPolicy: Always

service:
  type: ClusterIP
  annotations: {}
  extraLabels: {}

nameOverride: ""
fullnameOverride: ""
imagePullSecrets: []

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: clusterswarm.lacolhost.com
      path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# extraConfigMaps -- Any extra configmaps to mount for the master and worker. Can be used for extra python packages
extraConfigMaps: {}
nodeSelector: {}
tolerations: []
affinity: {}
# extraLabels -- Any extra labels to apply to all resources
extraLabels: {}

metrics:
  enabled: false
  interval: "2s"